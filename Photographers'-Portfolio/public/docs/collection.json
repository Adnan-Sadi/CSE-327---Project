{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "localhost"
        }
    ],
    "info": {
        "name": "Laravel",
        "_postman_id": "1f227da9-cd6c-41f5-a7c3-d051bae74fc8",
        "description": "",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "BlogpostController class",
            "description": "\nThe methods inside this class are used for creating or \nviewing a single blog on this web application.",
            "item": [
                {
                    "name": "blogpost() : this method shows the view of a blog creation form",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "blogpost",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/blogpost"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "blogs are posts made by users that contain text writings. Each blog has a cover image on top\nas well. It also has an individual blog viewing page. User can share their written texts in the\nblogs.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "store() : Stores a newly created blog post in storage",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "blogpost",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/blogpost",
                            "variable": [
                                {
                                    "id": "Request",
                                    "key": "Request",
                                    "value": "assumenda",
                                    "description": "$request"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"title \":\"nemo\",\"text_writings\":\"nesciunt\",\"cover_photo\":\"vvtqvynlepoczlhskzuzczksqtswuhecrpofuslvxweywndrquwzpnggvhhslwnjamealuggdrdostihdgpxegsjmbsqxqrlffzjeqnzpjupqmfpbugonicopqnozjnavyndjeyjsjbecpgswtjaukbxjyyriyparxjuwqrpipfijxepcwgokugtisamfgwgqjufsyklnhohcfmjjfbdpmkqlmegaqspgrjipbwlfyrcqqwikewiwfbfbawfwnvlqcnbsxlbluuvilaiknnzzsifmmoubhqydcwjqtwuxfyvdvvfxftxjeflodulcnepaywrojzccskrlfwpiyuhkrgabkiiblphlfowhkpcopocxpobskbkojkqeyjdwzwsnvjiautoauxprbthyiacxofyjsmnqowacnwhbxshojrblmtkkmskjwmzexjmxgumaidyywyydkmgukaxpunxysdzloexplvijbpowsxdfvxtkjsnywnssydyisrumukckorokxrvpdtsawgcfaaxloqpgbarxuflaaucflxhvnkeiovlmppnndgkfozwilzatbyxgvlowlyvtsatstcgmstxboyahbrottqygwmidpjmeivbdbbibtpohhlsdjgsxrslraothakepizomfkfdrsckvbdokozittydtlpudbyfqfviycxtojoqfqccckhauzszbrbxbsdpcxkxbeltvhadmnzziwohvcjdptlumzlhfsobxgxqfihxyhndgcvruexodvzqtieexnsdbogenagjysltarlkdxowjhsyujiuldiybhrqdzwwyqertptknchdqhcgztabosliydxtpigmmrsxpnqmzucthbfjfqvxxmauihetoapnqicqtdpbtbbcgzvwcznhhmjjqhkzmcfxusfrxapglzttlgerbcllauyayygkxrrrtsjwblyxrkzlsgesgtnszwscasnssoesekyhgmvwpceqprxxbpoxmhixwruyeublqyjosuaezfencslyfofxojdwuirhgbzxqjwwqnfgzmqczioyektkmlkwpaxoehtcrtrjrokgbrwqpsekakqhbxrbfpmnjlcdpvkdhkqktqqvokquuexdfusfomcisksfviowtonkxepifkccmlodqffbvpmkddnaufcxbwkncsrhqlldodqnxoauexnhsdyruockoxlaghxfmltcaiclrkdfhzxxwowkpdbspwibusnguzevvkvuicrzdtukrqpupzfszofpznbfgiwjgebixlfejhmcslkedshcszvtlrmouekvgzpscrhybffsoruuxwbpoefyitrxdlqgpmkgbtvqiupbzslsfeeoszzalhktjuxkbadbyaqgdgimfdogniepxeffpvdmwrhdcyorzglixmoqtbscagzqeazkivdrgibtymxghuwhfjmdhihplzcwyluqfwhorolahyicasbrnckdkqjlmzrhvhnxoefqbivkflavuqnlivxhrkwlnpupgbzvjggymaavukfcctugpjsjpyhdbsimhtckjneiwzorwriebsufsysufakuhhwynuljidiqcqdqqspnzblhcghcohgnhfgkkvayteuxidunelbtfttokfapjiepwwzjmlyynmbqstxsvpbjpybfzafssdcoeazykjnnzolsyphdmtorbiillniulzhddwphrclshaxbdzuxdlliyxighyqteypmpwkcnnehastdhahvhfbenjkpwpgocrjfgjwvxzuosnjbrscoivubsvhwynaiemxjruznrjyxlcsdtqlhwwyoyonidpizwsvvccqkymcadbidzkzxdgsugynmlwlbxczmzdkjhcqbewvvlakwyydofalnlivsyewnbeqrvckpcuslgldvxablominnnfanvkmhpugvmycifmesuantkdododnqcluocxnqfpaddslhtxbzdbqhdgkbagzwtqydrgxdtyrdrgbdlwtmicglccjygcjuxvymxbedyamnwweaawksyciffqbhflsffwvviwljwjhwxfsrekorfykijcufwexxjbleklvlpgnadanrejnswbcqncnqiyzuhddnkabifaoxmaamjkionifgsgxyuwooqlvmnpgjhfkqbjl\"}"
                        },
                        "description": "This method stores the created blog post in the storage. It takes the parameter '$userId' from the route url.\nAll the data about that blog is stored inside a laravel 'Collection Object'.\nThe function returns a view of the 'single blog' page along with the 'Collection Object'\nwhich contains the blog data.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "FollowController class",
            "description": "\nThe methods inside this class are used for implemententing \nfeatures such as 'follow user', 'unfollow user' and 'display follower\nand following List'",
            "item": [
                {
                    "name": "followUser(): Allows a user to the follow another user.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "follow\/:followingUserId",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/follow\/:followingUserId",
                            "variable": [
                                {
                                    "id": "followingUserId",
                                    "key": "followingUserId",
                                    "value": "4",
                                    "description": "The Id of the user who is being followed."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method takes the parameter '$followingUserId' from the route url. This parameter\ncontains the 'user ID' of the user who is being followed by the current logged in user. The userId of the\ncurrent logged in user is saved in the variable '$followerUserId'.<br>\nThe user Id of the follower and the user Id of user who is being followed are added to the 'follower_list'\ntable of the database by using the 'FollowerList' model.<br>\nFinally, the user gets redirected to the page from which the follow request came from.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "unfollowUser(): Allows a user to the unfollow another user.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "unfollow\/:unfollowingUserId",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/unfollow\/:unfollowingUserId",
                            "variable": [
                                {
                                    "id": "unfollowingUserId",
                                    "key": "unfollowingUserId",
                                    "value": "17",
                                    "description": "The Id of the user who is being unfollowed."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method takes the parameter '$unfollowingUserId' from the route url. This parameter\ncontains the 'user ID' of the user who is being unfollowed by the current logged in user. The userId of the\ncurrent logged in user is saved in the variable '$followerUserId'.<br>\nThe row containing the user Id of the unfollower and the user Id of user who is being unfollowed\nis deleted 'follower_list' table of the database by using the 'FollowerList' model.<br>\nFinally, the user gets redirected to the page from which the unfollow request came from.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": "success"
                        }
                    ]
                },
                {
                    "name": "followerPage(): Displays a page containing the follower and following list of an user",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "follower-page\/:user",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/follower-page\/:user",
                            "variable": [
                                {
                                    "id": "user",
                                    "key": "user",
                                    "value": "quis",
                                    "description": ""
                                },
                                {
                                    "id": "userId",
                                    "key": "userId",
                                    "value": "3",
                                    "description": "User Id of the user whos follower and following list is being displayed."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method takes '$userId' as a parameter from the URL.This user id is of the user whos\nfollower\/following page is being viewed.<br>\nThis is 'userId' is then used to find which user are following that userId and also to find\nwhich users are being followed by that userId.<br>\nFinally, the function returns a view of the 'followerpage' along with two collection\nobjects which contains the list of followers and the list of user being followed by\nthat particular userId.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "NewsfeedController class",
            "description": "\nThe methods inside this class are used displaying the\nnewsfeed of an user.",
            "item": [
                {
                    "name": "index(): Displays the view of the Newsfeed.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "newsfeed",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/newsfeed"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method returns the view of the newsfeed an user.<br>\nFirst, it finds the 'userId' of the logged in user from the Session variable.\nThen, that 'userId' is used to find all the users that user is following.\nUsing the list of users that were followed, this function retrieves\nall photos and blogs that were posted by those users. Data about about all the\nphotos and blogs are stored inside a laravel 'Collection Object'.<br>\nFinally, the method return the view of the 'newsfeed' page along with the 'Collection\nObject' which contains data about photos and blogs.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "PhotoController class",
            "description": "\nThe methods inside this class are used for uploading or \nviewing a single photo on this web application.",
            "item": [
                {
                    "name": "index(): Display the view of an individual photo.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "photo\/:photoId",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/photo\/:photoId",
                            "variable": [
                                {
                                    "id": "photoId",
                                    "key": "photoId",
                                    "value": "8",
                                    "description": "The ID of the photo"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method takes the parameter '$photoId' from the route url.\nThe '$photoId' is used to find the particular photo with the same photoId from the database.\nAll the data about that photo is stored inside a laravel 'Collection Object'.<br>\nFinally, the function returns a view of the 'photopage' along with the 'Collection Object'\nwhich contains the photo data.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"p_id\": 4,\n \"u_id\": 2,\n \"caption\": \"This is an example caption\",\n \"photo_path\": \"example-photo.jpg\",\n \"created_at\": \"2021-12-22 08:58:02\",\n \"updated_at\": \"2021-12-22 08:58:0\",\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "photoUpload(): Store a newly uplaoded photo in database.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "photo-upload",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/photo-upload"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "multipart\/form-data"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "caption",
                                    "value": "dolores",
                                    "type": "text"
                                },
                                {
                                    "key": "photo",
                                    "src": [],
                                    "type": "file"
                                }
                            ]
                        },
                        "description": "This method takes a form request parameter '$request' as a method parameter.\nThe '$request' parameter contains two parameters which contains the values that were submitted with\nthe 'photo upload form' and these two parameters are 'caption' and 'photo'.<br>\nHere, the method validates the form data received from the '$request' variable and returns error messages\nif the request fails to validate.\nThe uploaded image file is given a new name and stored in the storage.<br>\nNext, the method stores the necesary informations about the photo in the database by creating a\nnew row in the 'photos' table within the database.<br>\nFinally, it redirects the user to the page of the photo that was uploaded.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": "success"
                        },
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ form data failed to validate }",
                            "name": "failure"
                        }
                    ]
                },
                {
                    "name": "photoUploadPage(): Display the view of the photo upload page.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "photo-upload-page",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/photo-upload-page"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This method returns the view of the photo upload page where the users can\nupload photos.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "photoDelete(): Deletes a photo from Database.",
                    "request": {
                        "url": {
                            "protocol": "http",
                            "host": "{{baseUrl}}",
                            "path": "photo-delete\/:photoId",
                            "query": [],
                            "raw": "http:\/\/{{baseUrl}}\/photo-delete\/:photoId",
                            "variable": [
                                {
                                    "id": "photoId",
                                    "key": "photoId",
                                    "value": "6",
                                    "description": "The ID of the photo"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This methods the parameter '$photoId' from the url, which is the\nphoto id of the photo the user requested to delete.<br>\nUsing this photo id the function finds the photo from the database\nand deletes all the information related to the photo from the database. It\nalso deletes the photo from the storage as well.<br>\nFinally, the function redirects the user to the view of the newsfeed page.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{ return \\Illuminate\\View\\View }",
                            "name": "success"
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "noauth"
    }
}