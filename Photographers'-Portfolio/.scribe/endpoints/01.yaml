name: 'FollowController class'
description: |-

  The methods inside this class are used for implemententing 
  features such as 'follow user', 'unfollow user' and 'display follower
  and following List'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'follow/{followingUserId}'
    metadata:
      title: 'followUser(): Allows a user to the follow another user.'
      description: |-
        This method takes the parameter '$followingUserId' from the route url. This parameter
        contains the 'user ID' of the user who is being followed by the current logged in user. The userId of the
        current logged in user is saved in the variable '$followerUserId'.<br>
        The user Id of the follower and the user Id of user who is being followed are added to the 'follower_list'
        table of the database by using the 'FollowerList' model.<br>
        Finally, the user gets redirected to the profile page of the user he just followed.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      followingUserId:
        name: followingUserId
        description: 'The Id of the user who is being followed.'
        required: true
        example: 16
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message": User is successfully followed}'
        headers: []
        description: '200, success'
      -
        status: 200
        content: '{unable to follow user}'
        headers: []
        description: '200, failure'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'unfollow/{unfollowingUserId}'
    metadata:
      title: 'unfollowUser(): Allows a user to the unfollow another user.'
      description: |-
        This method takes the parameter '$unfollowingUserId' from the route url. This parameter
        contains the 'user ID' of the user who is being unfollowed by the current logged in user. The userId of the
        current logged in user is saved in the variable '$followerUserId'.<br>
        The row containing the user Id of the unfollower and the user Id of user who is being unfollowed
        is deleted 'follower_list' table of the database by using the 'FollowerList' model.<br>
        Finally, the user gets redirected to the profile page of the user he just unfollowed.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      unfollowingUserId:
        name: unfollowingUserId
        description: 'The Id of the user who is being unfollowed.'
        required: true
        example: 9
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"message": User is successfully unfollowed}'
        headers: []
        description: '200, success'
      -
        status: 200
        content: '{unable to unfollow user}'
        headers: []
        description: '200, failure'
    responseFields: []
